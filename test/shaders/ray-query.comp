#version 460 core
#extension GL_EXT_ray_query : enable
#extension GL_EXT_ray_tracing : enable

layout (binding = 0, set = 0) uniform AccelerationStructure { uvec2 acc; };
layout (binding = 1, rgba32f) uniform image2D img;
layout (local_size_x = 32, local_size_y = 4, local_size_z = 1) in;

void main() {
  vec2 size = vec2(1280.f.x, 720.f.x);
  vec2 pixelCenter = vec2(gl_GlobalInvocationID.xy) + vec2(0.5);
  vec2 uv = pixelCenter / size;

  vec2 d = uv * 2.0 - 1.0;
  float aspectRatio = size.x / size.y;

  vec3 rayOrigin = vec3(0, 0, -1.5);
  vec3 rayDir = normalize(vec3(d.x * aspectRatio, d.y, 1));
  
  vec4 payload = vec4(0.3f.xxx, 1.f);
  /*
  rayQueryEXT rayQuery;
  rayQueryInitializeEXT(rayQuery, accelerationStructureEXT(acc), gl_RayFlagsTerminateOnFirstHitEXT, 0xff, rayOrigin, 0.001, rayDir, 100.0);
  
  while(rayQueryProceedEXT(rayQuery)) {
    rayQueryConfirmIntersectionEXT(rayQuery);
  };
  
  if (rayQueryGetIntersectionTypeEXT(rayQuery, true) != gl_RayQueryCommittedIntersectionNoneEXT) {
    vec2 attribs = rayQueryGetIntersectionBarycentricsEXT(rayQuery, true);
    payload = vec4(1.f - attribs.x - attribs.y, attribs.x, attribs.y, 1.f);
  }*/
  
  imageStore(img, ivec2(gl_GlobalInvocationID.xy), payload);
}

